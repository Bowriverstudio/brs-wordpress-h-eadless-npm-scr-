#!/usr/bin/env node
const config = require("../../../brs.config");

const yargs = require("yargs");

const fs = require("fs-extra");
const path = require("path");


const poc_component_path = config.poc_path + "/src/components";
const faust_component_path = config.faust_path + "/src/components";

function getDirectories(srcpath) {
  const paths = fs
    .readdirSync(srcpath)
    .map((file) => path.join(srcpath, file))
    .filter((path) => fs.statSync(path).isDirectory());

  return paths.map((path) => path.split("/").pop());
}

function listCommands() {
  console.log("Possible Commands");

  const components = getDirectories(poc_component_path);
  components.map((component) => {
    console.log(`npm run component-local push ${component}`);
  });
}


function moveComponentToFaust(src_dir, dest_dir){

    // Delete Existing dest_dir Directory
    fs.rmSync(dest_dir, { recursive: true, force: true });

    // Copy From scr to dest
    fs.copySync(src_dir, dest_dir, { overwrite: true });

    // Remove Test Directory at dest
    const test_dir = dest_dir + "/tests";
    fs.rmSync(test_dir, { recursive: true, force: true });
}


yargs.command({
  command: "push",
  describe: "Push a New",
  handler: function () {
    const components = getDirectories(poc_component_path);
    const component = yargs.argv._[1];

    if( component.startsWith('GenesisCustomBlocks') ){

        const genesisCustomBlocksDir = poc_component_path + "/" + component;

        const genesisCustomBlocks = getDirectories(genesisCustomBlocksDir)

        console.log(genesisCustomBlocks)
        // TODO - Make it possible to move only one block at a time.
        genesisCustomBlocks.map(genesisCustomBlock => {
            const src_dir = poc_component_path + "/" + component + "/" + genesisCustomBlock;
            const destination_dir = faust_component_path + "/" + component + "/" + genesisCustomBlock;
            moveComponentToFaust(src_dir, destination_dir)
            console.log(`Copied ${genesisCustomBlock} over`);
        })

        // Need to move over the client genesis.generated.ts
        const src = config.poc_path + "/src/client/genesis.generated.ts";
        const dest = config.faust_path + "/src/client/genesis.generated.ts";
        fs.copySync(src, dest, { overwrite: true });

    } else if (components.includes(component)) {
      const src_dir = poc_component_path + "/" + component;
      const destination_dir = faust_component_path + "/" + component;
      moveComponentToFaust(src_dir, destination_dir)
      console.log(`Copied ${component} over`);

    } else {
      console.log(`Component ${component} Doesn't exist`);
    }

  },
});

// //Create remove command
// yargs.command({
//   command: "remove",
//   describe: "Remove the note",
//   handler: function () {
//     console.log("Removing a note");
//   },
// });

//Create list command
yargs.command({
  command: "list",
  describe: "List all the notes",
  handler: function () {
    listCommands();
  },
});


// Run Script
yargs.argv;
const command = yargs.argv._[0];
if (command === undefined) {
  listCommands();
}
